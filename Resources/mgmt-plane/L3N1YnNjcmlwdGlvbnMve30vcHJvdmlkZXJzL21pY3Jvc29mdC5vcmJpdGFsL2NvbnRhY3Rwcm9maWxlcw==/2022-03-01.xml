<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/microsoft.orbital/contactprofiles" version="2022-03-01" swagger="mgmt-plane/orbital/ResourceProviders/Microsoft.Orbital/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0Lk9yYml0YWwvY29udGFjdFByb2ZpbGVz/V/MjAyMi0wMy0wMQ=="/>
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.orbital/contactprofiles" version="2022-03-01" swagger="mgmt-plane/orbital/ResourceProviders/Microsoft.Orbital/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuT3JiaXRhbC9jb250YWN0UHJvZmlsZXM=/V/MjAyMi0wMy0wMQ=="/>
  <commandGroup name="orbital contact-profile">
    <command name="list" version="2022-03-01">
      <resource id="/subscriptions/{}/providers/microsoft.orbital/contactprofiles" version="2022-03-01" swagger="mgmt-plane/orbital/ResourceProviders/Microsoft.Orbital/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0Lk9yYml0YWwvY29udGFjdFByb2ZpbGVz/V/MjAyMi0wMy0wMQ=="/>
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.orbital/contactprofiles" version="2022-03-01" swagger="mgmt-plane/orbital/ResourceProviders/Microsoft.Orbital/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuT3JiaXRhbC9jb250YWN0UHJvZmlsZXM=/V/MjAyMi0wMy0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True"/>
        <arg type="string" var="$Query.skiptoken" options="skiptoken">
          <help short="An opaque string that the resource provider uses to skip over previously-returned results. This is used when a previous list operation call returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls."/>
        </arg>
      </argGroup>
      <condition var="$Condition_ContactProfiles_List">
        <operator type="and">
          <operator type="hasValue" arg="$Path.resourceGroupName"/>
          <operator type="hasValue" arg="$Path.subscriptionId"/>
        </operator>
      </condition>
      <condition var="$Condition_ContactProfiles_ListBySubscription">
        <operator type="and">
          <operator type="hasValue" arg="$Path.subscriptionId"/>
          <operator type="not">
            <operator type="hasValue" arg="$Path.resourceGroupName"/>
          </operator>
        </operator>
      </condition>
      <operation when="$Condition_ContactProfiles_List" operationId="ContactProfiles_List">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Orbital/contactProfiles">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <param type="string" name="$skiptoken" arg="$Query.skiptoken"/>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-03-01&quot;"/>
                <enum>
                  <item value="&quot;2020-09-01-preview&quot;"/>
                  <item value="&quot;2021-04-04-preview&quot;"/>
                  <item value="&quot;2022-03-01&quot;"/>
                </enum>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="nextLink"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="string" name="etag"/>
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Orbital/contactProfiles/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="string" name="autoTrackingConfiguration">
                          <enum>
                            <item value="&quot;disabled&quot;"/>
                            <item value="&quot;sBand&quot;"/>
                            <item value="&quot;xBand&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="eventHubUri"/>
                        <prop type="array<object>" name="links" required="True">
                          <item type="object">
                            <prop type="array<object>" name="channels" required="True">
                              <item type="object">
                                <prop type="float" name="bandwidthMHz" required="True"/>
                                <prop type="float" name="centerFrequencyMHz" required="True"/>
                                <prop type="string" name="decodingConfiguration"/>
                                <prop type="string" name="demodulationConfiguration"/>
                                <prop type="string" name="encodingConfiguration"/>
                                <prop type="object" name="endPoint" required="True">
                                  <prop type="string" name="endPointName" required="True"/>
                                  <prop type="string" name="ipAddress" required="True"/>
                                  <prop type="string" name="port" required="True"/>
                                  <prop type="string" name="protocol" required="True">
                                    <enum>
                                      <item value="&quot;TCP&quot;"/>
                                      <item value="&quot;UDP&quot;"/>
                                    </enum>
                                  </prop>
                                </prop>
                                <prop type="string" name="modulationConfiguration"/>
                                <prop type="string" name="name" required="True"/>
                              </item>
                            </prop>
                            <prop type="string" name="direction" required="True">
                              <enum>
                                <item value="&quot;downlink&quot;"/>
                                <item value="&quot;uplink&quot;"/>
                              </enum>
                            </prop>
                            <prop type="float" name="eirpdBW"/>
                            <prop type="float" name="gainOverTemperature"/>
                            <prop type="string" name="name" required="True"/>
                            <prop type="string" name="polarization" required="True">
                              <enum>
                                <item value="&quot;LHCP&quot;"/>
                                <item value="&quot;RHCP&quot;"/>
                                <item value="&quot;linearHorizontal&quot;"/>
                                <item value="&quot;linearVertical&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop type="float" name="minimumElevationDegrees"/>
                        <prop type="string" name="minimumViableContactDuration"/>
                        <prop type="object" name="networkConfiguration" required="True">
                          <prop type="string" name="subnetId" required="True"/>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Creating&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop readOnly="True" type="dateTime" name="createdAt"/>
                        <prop readOnly="True" type="string" name="createdBy"/>
                        <prop readOnly="True" type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="dateTime" name="lastModifiedAt"/>
                        <prop readOnly="True" type="string" name="lastModifiedBy"/>
                        <prop readOnly="True" type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation when="$Condition_ContactProfiles_ListBySubscription" operationId="ContactProfiles_ListBySubscription">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.Orbital/contactProfiles">
          <request method="get">
            <path>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <param type="string" name="$skiptoken" arg="$Query.skiptoken"/>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-03-01&quot;"/>
                <enum>
                  <item value="&quot;2020-09-01-preview&quot;"/>
                  <item value="&quot;2021-04-04-preview&quot;"/>
                  <item value="&quot;2022-03-01&quot;"/>
                </enum>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="nextLink"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="string" name="etag"/>
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Orbital/contactProfiles/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="string" name="autoTrackingConfiguration">
                          <enum>
                            <item value="&quot;disabled&quot;"/>
                            <item value="&quot;sBand&quot;"/>
                            <item value="&quot;xBand&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="eventHubUri"/>
                        <prop type="array<object>" name="links" required="True">
                          <item type="object">
                            <prop type="array<object>" name="channels" required="True">
                              <item type="object">
                                <prop type="float" name="bandwidthMHz" required="True"/>
                                <prop type="float" name="centerFrequencyMHz" required="True"/>
                                <prop type="string" name="decodingConfiguration"/>
                                <prop type="string" name="demodulationConfiguration"/>
                                <prop type="string" name="encodingConfiguration"/>
                                <prop type="object" name="endPoint" required="True">
                                  <prop type="string" name="endPointName" required="True"/>
                                  <prop type="string" name="ipAddress" required="True"/>
                                  <prop type="string" name="port" required="True"/>
                                  <prop type="string" name="protocol" required="True">
                                    <enum>
                                      <item value="&quot;TCP&quot;"/>
                                      <item value="&quot;UDP&quot;"/>
                                    </enum>
                                  </prop>
                                </prop>
                                <prop type="string" name="modulationConfiguration"/>
                                <prop type="string" name="name" required="True"/>
                              </item>
                            </prop>
                            <prop type="string" name="direction" required="True">
                              <enum>
                                <item value="&quot;downlink&quot;"/>
                                <item value="&quot;uplink&quot;"/>
                              </enum>
                            </prop>
                            <prop type="float" name="eirpdBW"/>
                            <prop type="float" name="gainOverTemperature"/>
                            <prop type="string" name="name" required="True"/>
                            <prop type="string" name="polarization" required="True">
                              <enum>
                                <item value="&quot;LHCP&quot;"/>
                                <item value="&quot;RHCP&quot;"/>
                                <item value="&quot;linearHorizontal&quot;"/>
                                <item value="&quot;linearVertical&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop type="float" name="minimumElevationDegrees"/>
                        <prop type="string" name="minimumViableContactDuration"/>
                        <prop type="object" name="networkConfiguration" required="True">
                          <prop type="string" name="subnetId" required="True"/>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Creating&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop readOnly="True" type="dateTime" name="createdAt"/>
                        <prop readOnly="True" type="string" name="createdBy"/>
                        <prop readOnly="True" type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="dateTime" name="lastModifiedAt"/>
                        <prop readOnly="True" type="string" name="lastModifiedBy"/>
                        <prop readOnly="True" type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
