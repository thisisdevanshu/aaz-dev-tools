<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.orbital/spacecrafts/{}" version="2022-03-01" swagger="mgmt-plane/orbital/ResourceProviders/Microsoft.Orbital/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuT3JiaXRhbC9zcGFjZWNyYWZ0cy97c3BhY2VjcmFmdE5hbWV9/V/MjAyMi0wMy0wMQ=="/>
  <commandGroup name="orbital spacecraft">
    <command name="show" version="2022-03-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.orbital/spacecrafts/{}" version="2022-03-01" swagger="mgmt-plane/orbital/ResourceProviders/Microsoft.Orbital/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuT3JiaXRhbC9zcGFjZWNyYWZ0cy97c3BhY2VjcmFmdE5hbWV9/V/MjAyMi0wMy0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.spacecraftName" options="spacecraft-name name n" required="True" idPart="name">
          <help short="Spacecraft ID."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Spacecrafts_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Orbital/spacecrafts/{spacecraftName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="spacecraftName" arg="$Path.spacecraftName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-03-01&quot;"/>
                <enum>
                  <item value="&quot;2020-09-01-preview&quot;"/>
                  <item value="&quot;2021-04-04-preview&quot;"/>
                  <item value="&quot;2022-03-01&quot;"/>
                </enum>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Orbital/spacecrafts/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<object>" name="links">
                      <item type="object">
                        <prop readOnly="True" type="array<object>" name="authorizations">
                          <item readOnly="True" type="object">
                            <prop readOnly="True" type="date" name="expirationDate"/>
                            <prop readOnly="True" type="string" name="groundStation"/>
                          </item>
                        </prop>
                        <prop type="float" name="bandwidthMHz" required="True"/>
                        <prop type="float" name="centerFrequencyMHz" required="True"/>
                        <prop type="string" name="direction" required="True">
                          <enum>
                            <item value="&quot;downlink&quot;"/>
                            <item value="&quot;uplink&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="name" required="True"/>
                        <prop type="string" name="polarization" required="True">
                          <enum>
                            <item value="&quot;LHCP&quot;"/>
                            <item value="&quot;RHCP&quot;"/>
                            <item value="&quot;linearHorizontal&quot;"/>
                            <item value="&quot;linearVertical&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="noradId" required="True"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="titleLine"/>
                    <prop type="string" name="tleLine1"/>
                    <prop type="string" name="tleLine2"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop readOnly="True" type="dateTime" name="createdAt"/>
                    <prop readOnly="True" type="string" name="createdBy"/>
                    <prop readOnly="True" type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="lastModifiedAt"/>
                    <prop readOnly="True" type="string" name="lastModifiedBy"/>
                    <prop readOnly="True" type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2022-03-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.orbital/spacecrafts/{}" version="2022-03-01" swagger="mgmt-plane/orbital/ResourceProviders/Microsoft.Orbital/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuT3JiaXRhbC9zcGFjZWNyYWZ0cy97c3BhY2VjcmFmdE5hbWV9/V/MjAyMi0wMy0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.spacecraftName" options="spacecraft-name name n" required="True" idPart="name">
          <help short="Spacecraft ID."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Spacecrafts_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Orbital/spacecrafts/{spacecraftName}">
          <request method="delete">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="spacecraftName" arg="$Path.spacecraftName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-03-01&quot;"/>
                <enum>
                  <item value="&quot;2020-09-01-preview&quot;"/>
                  <item value="&quot;2021-04-04-preview&quot;"/>
                  <item value="&quot;2022-03-01&quot;"/>
                </enum>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202">
            <header>
              <item name="Location"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2022-03-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.orbital/spacecrafts/{}" version="2022-03-01" swagger="mgmt-plane/orbital/ResourceProviders/Microsoft.Orbital/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuT3JiaXRhbC9zcGFjZWNyYWZ0cy97c3BhY2VjcmFmdE5hbWV9/V/MjAyMi0wMy0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.spacecraftName" options="spacecraft-name name n" required="True" idPart="name">
          <help short="Spacecraft ID."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Parameters">
        <arg type="ResourceLocation" var="$parameters.location" options="location l" required="True" group="Parameters">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$parameters.tags" options="tags" group="Parameters">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="array<object>" var="$parameters.properties.links" options="links" group="Properties">
          <help short="Immutable list of Spacecraft links."/>
          <item type="object">
            <arg type="float" var="$parameters.properties.links[].bandwidthMHz" options="bandwidth-m-hz" required="True">
              <help short="Bandwidth in MHz."/>
            </arg>
            <arg type="float" var="$parameters.properties.links[].centerFrequencyMHz" options="center-frequency-m-hz" required="True">
              <help short="Center Frequency in MHz."/>
            </arg>
            <arg type="string" var="$parameters.properties.links[].direction" options="direction" required="True">
              <help short="Direction (uplink or downlink)."/>
              <enum>
                <item name="downlink" value="&quot;downlink&quot;"/>
                <item name="uplink" value="&quot;uplink&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$parameters.properties.links[].name" options="name" required="True">
              <help short="Link name."/>
            </arg>
            <arg type="string" var="$parameters.properties.links[].polarization" options="polarization" required="True">
              <help short="Polarization. e.g. (RHCP, LHCP)."/>
              <enum>
                <item name="LHCP" value="&quot;LHCP&quot;"/>
                <item name="RHCP" value="&quot;RHCP&quot;"/>
                <item name="linearHorizontal" value="&quot;linearHorizontal&quot;"/>
                <item name="linearVertical" value="&quot;linearVertical&quot;"/>
              </enum>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$parameters.properties.noradId" options="norad-id" group="Properties">
          <help short="NORAD ID of the spacecraft."/>
        </arg>
        <arg type="string" var="$parameters.properties.titleLine" options="title-line" group="Properties">
          <help short="Title line of the two-line element set (TLE)."/>
        </arg>
        <arg type="string" var="$parameters.properties.tleLine1" options="tle-line1" group="Properties">
          <help short="Line 1 of the two-line element set (TLE)."/>
        </arg>
        <arg type="string" var="$parameters.properties.tleLine2" options="tle-line2" group="Properties">
          <help short="Line 2 of the two-line element set (TLE)."/>
        </arg>
      </argGroup>
      <operation operationId="Spacecrafts_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Orbital/spacecrafts/{spacecraftName}">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="spacecraftName" arg="$Path.spacecraftName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-03-01&quot;"/>
                <enum>
                  <item value="&quot;2020-09-01-preview&quot;"/>
                  <item value="&quot;2021-04-04-preview&quot;"/>
                  <item value="&quot;2022-03-01&quot;"/>
                </enum>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$parameters.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<object>" name="links" arg="$parameters.properties.links">
                      <item type="object">
                        <prop type="float" name="bandwidthMHz" arg="$parameters.properties.links[].bandwidthMHz" required="True"/>
                        <prop type="float" name="centerFrequencyMHz" arg="$parameters.properties.links[].centerFrequencyMHz" required="True"/>
                        <prop type="string" name="direction" arg="$parameters.properties.links[].direction" required="True">
                          <enum>
                            <item value="&quot;downlink&quot;"/>
                            <item value="&quot;uplink&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="name" arg="$parameters.properties.links[].name" required="True"/>
                        <prop type="string" name="polarization" arg="$parameters.properties.links[].polarization" required="True">
                          <enum>
                            <item value="&quot;LHCP&quot;"/>
                            <item value="&quot;RHCP&quot;"/>
                            <item value="&quot;linearHorizontal&quot;"/>
                            <item value="&quot;linearVertical&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="noradId" arg="$parameters.properties.noradId" required="True"/>
                    <prop type="string" name="titleLine" arg="$parameters.properties.titleLine"/>
                    <prop type="string" name="tleLine1" arg="$parameters.properties.tleLine1"/>
                    <prop type="string" name="tleLine2" arg="$parameters.properties.tleLine2"/>
                  </prop>
                  <prop type="object" name="tags" arg="$parameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Orbital/spacecrafts/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<object>" name="links">
                      <item type="object">
                        <prop readOnly="True" type="array<object>" name="authorizations">
                          <item readOnly="True" type="object">
                            <prop readOnly="True" type="date" name="expirationDate"/>
                            <prop readOnly="True" type="string" name="groundStation"/>
                          </item>
                        </prop>
                        <prop type="float" name="bandwidthMHz" required="True"/>
                        <prop type="float" name="centerFrequencyMHz" required="True"/>
                        <prop type="string" name="direction" required="True">
                          <enum>
                            <item value="&quot;downlink&quot;"/>
                            <item value="&quot;uplink&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="name" required="True"/>
                        <prop type="string" name="polarization" required="True">
                          <enum>
                            <item value="&quot;LHCP&quot;"/>
                            <item value="&quot;RHCP&quot;"/>
                            <item value="&quot;linearHorizontal&quot;"/>
                            <item value="&quot;linearVertical&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="noradId" required="True"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="titleLine"/>
                    <prop type="string" name="tleLine1"/>
                    <prop type="string" name="tleLine2"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop readOnly="True" type="dateTime" name="createdAt"/>
                    <prop readOnly="True" type="string" name="createdBy"/>
                    <prop readOnly="True" type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="lastModifiedAt"/>
                    <prop readOnly="True" type="string" name="lastModifiedBy"/>
                    <prop readOnly="True" type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2022-03-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.orbital/spacecrafts/{}" version="2022-03-01" swagger="mgmt-plane/orbital/ResourceProviders/Microsoft.Orbital/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuT3JiaXRhbC9zcGFjZWNyYWZ0cy97c3BhY2VjcmFmdE5hbWV9/V/MjAyMi0wMy0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.spacecraftName" options="spacecraft-name name n" required="True" idPart="name">
          <help short="Spacecraft ID."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Parameters">
        <arg type="ResourceLocation" var="$parameters.location" options="location l" group="Parameters">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg nullable="True" type="object" var="$parameters.tags" options="tags" group="Parameters">
          <help short="Resource tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$parameters.properties.noradId" options="norad-id" group="Properties">
          <help short="NORAD ID of the spacecraft."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.titleLine" options="title-line" group="Properties">
          <help short="Title line of the two-line element set (TLE)."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.tleLine1" options="tle-line1" group="Properties">
          <help short="Line 1 of the two-line element set (TLE)."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.tleLine2" options="tle-line2" group="Properties">
          <help short="Line 2 of the two-line element set (TLE)."/>
        </arg>
      </argGroup>
      <operation operationId="Spacecrafts_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Orbital/spacecrafts/{spacecraftName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="spacecraftName" arg="$Path.spacecraftName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-03-01&quot;"/>
                <enum>
                  <item value="&quot;2020-09-01-preview&quot;"/>
                  <item value="&quot;2021-04-04-preview&quot;"/>
                  <item value="&quot;2022-03-01&quot;"/>
                </enum>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="Spacecraft_read">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Orbital/spacecrafts/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<object>" name="links">
                      <item type="object">
                        <prop readOnly="True" type="array<object>" name="authorizations">
                          <item readOnly="True" type="object">
                            <prop readOnly="True" type="date" name="expirationDate"/>
                            <prop readOnly="True" type="string" name="groundStation"/>
                          </item>
                        </prop>
                        <prop type="float" name="bandwidthMHz" required="True"/>
                        <prop type="float" name="centerFrequencyMHz" required="True"/>
                        <prop type="string" name="direction" required="True">
                          <enum>
                            <item value="&quot;downlink&quot;"/>
                            <item value="&quot;uplink&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="name" required="True"/>
                        <prop type="string" name="polarization" required="True">
                          <enum>
                            <item value="&quot;LHCP&quot;"/>
                            <item value="&quot;RHCP&quot;"/>
                            <item value="&quot;linearHorizontal&quot;"/>
                            <item value="&quot;linearVertical&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="noradId" required="True"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="titleLine"/>
                    <prop type="string" name="tleLine1"/>
                    <prop type="string" name="tleLine2"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop readOnly="True" type="dateTime" name="createdAt"/>
                    <prop readOnly="True" type="string" name="createdBy"/>
                    <prop readOnly="True" type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="lastModifiedAt"/>
                    <prop readOnly="True" type="string" name="lastModifiedBy"/>
                    <prop readOnly="True" type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate instance="$Instance">
          <json>
            <schema type="object" name="parameters" required="True" clientFlatten="True">
              <prop type="ResourceLocation" name="location" arg="$parameters.location" required="True"/>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="string" name="noradId" arg="$parameters.properties.noradId" required="True"/>
                <prop type="string" name="titleLine" arg="$parameters.properties.titleLine"/>
                <prop type="string" name="tleLine1" arg="$parameters.properties.tleLine1"/>
                <prop type="string" name="tleLine2" arg="$parameters.properties.tleLine2"/>
              </prop>
              <prop type="object" name="tags" arg="$parameters.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="Spacecrafts_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Orbital/spacecrafts/{spacecraftName}">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="spacecraftName" arg="$Path.spacecraftName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-03-01&quot;"/>
                <enum>
                  <item value="&quot;2020-09-01-preview&quot;"/>
                  <item value="&quot;2021-04-04-preview&quot;"/>
                  <item value="&quot;2022-03-01&quot;"/>
                </enum>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@Spacecraft_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
