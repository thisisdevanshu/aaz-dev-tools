<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.orbital/contactprofiles/{}" version="2022-03-01" swagger="mgmt-plane/orbital/ResourceProviders/Microsoft.Orbital/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuT3JiaXRhbC9jb250YWN0UHJvZmlsZXMve2NvbnRhY3RQcm9maWxlTmFtZX0=/V/MjAyMi0wMy0wMQ=="/>
  <commandGroup name="orbital contact-profile">
    <command name="show" version="2022-03-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.orbital/contactprofiles/{}" version="2022-03-01" swagger="mgmt-plane/orbital/ResourceProviders/Microsoft.Orbital/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuT3JiaXRhbC9jb250YWN0UHJvZmlsZXMve2NvbnRhY3RQcm9maWxlTmFtZX0=/V/MjAyMi0wMy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.contactProfileName" options="contact-profile-name name n" required="True" idPart="name">
          <help short="Contact Profile name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="ContactProfiles_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Orbital/contactProfiles/{contactProfileName}">
          <request method="get">
            <path>
              <param type="string" name="contactProfileName" arg="$Path.contactProfileName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-03-01&quot;"/>
                <enum>
                  <item value="&quot;2020-09-01-preview&quot;"/>
                  <item value="&quot;2021-04-04-preview&quot;"/>
                  <item value="&quot;2022-03-01&quot;"/>
                </enum>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Orbital/contactProfiles/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="autoTrackingConfiguration">
                      <enum>
                        <item value="&quot;disabled&quot;"/>
                        <item value="&quot;sBand&quot;"/>
                        <item value="&quot;xBand&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="eventHubUri"/>
                    <prop type="array<object>" name="links" required="True">
                      <item type="object">
                        <prop type="array<object>" name="channels" required="True">
                          <item type="object">
                            <prop type="float" name="bandwidthMHz" required="True"/>
                            <prop type="float" name="centerFrequencyMHz" required="True"/>
                            <prop type="string" name="decodingConfiguration"/>
                            <prop type="string" name="demodulationConfiguration"/>
                            <prop type="string" name="encodingConfiguration"/>
                            <prop type="object" name="endPoint" required="True">
                              <prop type="string" name="endPointName" required="True"/>
                              <prop type="string" name="ipAddress" required="True"/>
                              <prop type="string" name="port" required="True"/>
                              <prop type="string" name="protocol" required="True">
                                <enum>
                                  <item value="&quot;TCP&quot;"/>
                                  <item value="&quot;UDP&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="string" name="modulationConfiguration"/>
                            <prop type="string" name="name" required="True"/>
                          </item>
                        </prop>
                        <prop type="string" name="direction" required="True">
                          <enum>
                            <item value="&quot;downlink&quot;"/>
                            <item value="&quot;uplink&quot;"/>
                          </enum>
                        </prop>
                        <prop type="float" name="eirpdBW"/>
                        <prop type="float" name="gainOverTemperature"/>
                        <prop type="string" name="name" required="True"/>
                        <prop type="string" name="polarization" required="True">
                          <enum>
                            <item value="&quot;LHCP&quot;"/>
                            <item value="&quot;RHCP&quot;"/>
                            <item value="&quot;linearHorizontal&quot;"/>
                            <item value="&quot;linearVertical&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop type="float" name="minimumElevationDegrees"/>
                    <prop type="string" name="minimumViableContactDuration"/>
                    <prop type="object" name="networkConfiguration" required="True">
                      <prop type="string" name="subnetId" required="True"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop readOnly="True" type="dateTime" name="createdAt"/>
                    <prop readOnly="True" type="string" name="createdBy"/>
                    <prop readOnly="True" type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="lastModifiedAt"/>
                    <prop readOnly="True" type="string" name="lastModifiedBy"/>
                    <prop readOnly="True" type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2022-03-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.orbital/contactprofiles/{}" version="2022-03-01" swagger="mgmt-plane/orbital/ResourceProviders/Microsoft.Orbital/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuT3JiaXRhbC9jb250YWN0UHJvZmlsZXMve2NvbnRhY3RQcm9maWxlTmFtZX0=/V/MjAyMi0wMy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.contactProfileName" options="contact-profile-name name n" required="True" idPart="name">
          <help short="Contact Profile name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="ContactProfiles_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Orbital/contactProfiles/{contactProfileName}">
          <request method="delete">
            <path>
              <param type="string" name="contactProfileName" arg="$Path.contactProfileName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-03-01&quot;"/>
                <enum>
                  <item value="&quot;2020-09-01-preview&quot;"/>
                  <item value="&quot;2021-04-04-preview&quot;"/>
                  <item value="&quot;2022-03-01&quot;"/>
                </enum>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202">
            <header>
              <item name="Location"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2022-03-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.orbital/contactprofiles/{}" version="2022-03-01" swagger="mgmt-plane/orbital/ResourceProviders/Microsoft.Orbital/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuT3JiaXRhbC9jb250YWN0UHJvZmlsZXMve2NvbnRhY3RQcm9maWxlTmFtZX0=/V/MjAyMi0wMy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.contactProfileName" options="contact-profile-name name n" required="True" idPart="name">
          <help short="Contact Profile name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Parameters">
        <arg type="ResourceLocation" var="$parameters.location" options="location l" required="True" group="Parameters">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$parameters.tags" options="tags" group="Parameters">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$parameters.properties.autoTrackingConfiguration" options="auto-tracking-configuration" group="Properties">
          <help short="Auto-tracking configuration."/>
          <enum>
            <item name="disabled" value="&quot;disabled&quot;"/>
            <item name="sBand" value="&quot;sBand&quot;"/>
            <item name="xBand" value="&quot;xBand&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$parameters.properties.eventHubUri" options="event-hub-uri" group="Properties">
          <help short="ARM resource identifier of the Event Hub used for telemetry. Requires granting Orbital Resource Provider the rights to send telemetry into the hub."/>
        </arg>
        <arg type="array<object>" var="$parameters.properties.links" options="links" group="Properties">
          <help short="Links of the Contact Profile. Describes RF links, modem processing, and IP endpoints."/>
          <item type="object">
            <arg type="array<object>" var="$parameters.properties.links[].channels" options="channels" required="True">
              <help short="Contact Profile Link Channel."/>
              <item type="object">
                <arg type="float" var="$parameters.properties.links[].channels[].bandwidthMHz" options="bandwidth-m-hz" required="True">
                  <help short="Bandwidth in MHz."/>
                </arg>
                <arg type="float" var="$parameters.properties.links[].channels[].centerFrequencyMHz" options="center-frequency-m-hz" required="True">
                  <help short="Center Frequency in MHz."/>
                </arg>
                <arg type="string" var="$parameters.properties.links[].channels[].decodingConfiguration" options="decoding-configuration">
                  <help short="Currently unused."/>
                </arg>
                <arg type="string" var="$parameters.properties.links[].channels[].demodulationConfiguration" options="demodulation-configuration">
                  <help short="Copy of the modem configuration file such as Kratos QRadio or Kratos QuantumRx. Only valid for downlink directions. If provided, the modem connects to the customer endpoint and sends demodulated data instead of a VITA.49 stream."/>
                </arg>
                <arg type="string" var="$parameters.properties.links[].channels[].encodingConfiguration" options="encoding-configuration">
                  <help short="Currently unused."/>
                </arg>
                <arg type="object" var="$parameters.properties.links[].channels[].endPoint" options="end-point" required="True">
                  <help short="Customer End point to store/retrieve data during a contact."/>
                  <arg type="string" var="$parameters.properties.links[].channels[].endPoint.endPointName" options="end-point-name" required="True">
                    <help short="Name of an end point."/>
                  </arg>
                  <arg type="string" var="$parameters.properties.links[].channels[].endPoint.ipAddress" options="ip-address" required="True">
                    <help short="IP Address."/>
                  </arg>
                  <arg type="string" var="$parameters.properties.links[].channels[].endPoint.port" options="port" required="True">
                    <help short="TCP port to listen on to receive data."/>
                  </arg>
                  <arg type="string" var="$parameters.properties.links[].channels[].endPoint.protocol" options="protocol" required="True">
                    <help short="Protocol either UDP or TCP."/>
                    <enum>
                      <item name="TCP" value="&quot;TCP&quot;"/>
                      <item name="UDP" value="&quot;UDP&quot;"/>
                    </enum>
                  </arg>
                </arg>
                <arg type="string" var="$parameters.properties.links[].channels[].modulationConfiguration" options="modulation-configuration">
                  <help short="Copy of the modem configuration file such as Kratos QRadio. Only valid for uplink directions. If provided, the modem connects to the customer endpoint and accepts commands from the customer instead of a VITA.49 stream."/>
                </arg>
                <arg type="string" var="$parameters.properties.links[].channels[].name" options="name" required="True">
                  <help short="Channel name."/>
                </arg>
              </item>
            </arg>
            <arg type="string" var="$parameters.properties.links[].direction" options="direction" required="True">
              <help short="Direction (uplink or downlink)."/>
              <enum>
                <item name="downlink" value="&quot;downlink&quot;"/>
                <item name="uplink" value="&quot;uplink&quot;"/>
              </enum>
            </arg>
            <arg type="float" var="$parameters.properties.links[].eirpdBW" options="eirpd-bw">
              <help short="Effective Isotropic Radiated Power (EIRP) in dBW. It is the required EIRP by the customer. Not used yet."/>
            </arg>
            <arg type="float" var="$parameters.properties.links[].gainOverTemperature" options="gain-over-temperature">
              <help short="Gain To Noise Temperature in db/K. It is the required G/T by the customer. Not used yet."/>
            </arg>
            <arg type="string" var="$parameters.properties.links[].name" options="name" required="True">
              <help short="Link name."/>
            </arg>
            <arg type="string" var="$parameters.properties.links[].polarization" options="polarization" required="True">
              <help short="Polarization. e.g. (RHCP, LHCP)."/>
              <enum>
                <item name="LHCP" value="&quot;LHCP&quot;"/>
                <item name="RHCP" value="&quot;RHCP&quot;"/>
                <item name="linearHorizontal" value="&quot;linearHorizontal&quot;"/>
                <item name="linearVertical" value="&quot;linearVertical&quot;"/>
              </enum>
            </arg>
          </item>
        </arg>
        <arg type="float" var="$parameters.properties.minimumElevationDegrees" options="minimum-elevation-degrees" group="Properties">
          <help short="Minimum viable elevation for the contact in decimal degrees. Used for listing the available contacts with a spacecraft at a given ground station."/>
        </arg>
        <arg type="string" var="$parameters.properties.minimumViableContactDuration" options="minimum-viable-contact-duration" group="Properties">
          <help short="Minimum viable contact duration in ISO 8601 format. Used for listing the available contacts with a spacecraft at a given ground station."/>
        </arg>
        <arg type="object" var="$parameters.properties.networkConfiguration" options="network-configuration" group="Properties">
          <help short="Network configuration of customer virtual network."/>
          <arg type="string" var="$parameters.properties.networkConfiguration.subnetId" options="subnet-id" required="True">
            <help short="ARM resource identifier of the subnet delegated to the Microsoft.Orbital/orbitalGateways. Needs to be at least a class C subnet, and should not have any IP created in it."/>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="ContactProfiles_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Orbital/contactProfiles/{contactProfileName}">
          <request method="put">
            <path>
              <param type="string" name="contactProfileName" arg="$Path.contactProfileName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-03-01&quot;"/>
                <enum>
                  <item value="&quot;2020-09-01-preview&quot;"/>
                  <item value="&quot;2021-04-04-preview&quot;"/>
                  <item value="&quot;2022-03-01&quot;"/>
                </enum>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$parameters.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="autoTrackingConfiguration" arg="$parameters.properties.autoTrackingConfiguration">
                      <enum>
                        <item value="&quot;disabled&quot;"/>
                        <item value="&quot;sBand&quot;"/>
                        <item value="&quot;xBand&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="eventHubUri" arg="$parameters.properties.eventHubUri"/>
                    <prop type="array<object>" name="links" arg="$parameters.properties.links" required="True">
                      <item type="object">
                        <prop type="array<object>" name="channels" arg="$parameters.properties.links[].channels" required="True">
                          <item type="object">
                            <prop type="float" name="bandwidthMHz" arg="$parameters.properties.links[].channels[].bandwidthMHz" required="True"/>
                            <prop type="float" name="centerFrequencyMHz" arg="$parameters.properties.links[].channels[].centerFrequencyMHz" required="True"/>
                            <prop type="string" name="decodingConfiguration" arg="$parameters.properties.links[].channels[].decodingConfiguration"/>
                            <prop type="string" name="demodulationConfiguration" arg="$parameters.properties.links[].channels[].demodulationConfiguration"/>
                            <prop type="string" name="encodingConfiguration" arg="$parameters.properties.links[].channels[].encodingConfiguration"/>
                            <prop type="object" name="endPoint" arg="$parameters.properties.links[].channels[].endPoint" required="True">
                              <prop type="string" name="endPointName" arg="$parameters.properties.links[].channels[].endPoint.endPointName" required="True"/>
                              <prop type="string" name="ipAddress" arg="$parameters.properties.links[].channels[].endPoint.ipAddress" required="True"/>
                              <prop type="string" name="port" arg="$parameters.properties.links[].channels[].endPoint.port" required="True"/>
                              <prop type="string" name="protocol" arg="$parameters.properties.links[].channels[].endPoint.protocol" required="True">
                                <enum>
                                  <item value="&quot;TCP&quot;"/>
                                  <item value="&quot;UDP&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="string" name="modulationConfiguration" arg="$parameters.properties.links[].channels[].modulationConfiguration"/>
                            <prop type="string" name="name" arg="$parameters.properties.links[].channels[].name" required="True"/>
                          </item>
                        </prop>
                        <prop type="string" name="direction" arg="$parameters.properties.links[].direction" required="True">
                          <enum>
                            <item value="&quot;downlink&quot;"/>
                            <item value="&quot;uplink&quot;"/>
                          </enum>
                        </prop>
                        <prop type="float" name="eirpdBW" arg="$parameters.properties.links[].eirpdBW"/>
                        <prop type="float" name="gainOverTemperature" arg="$parameters.properties.links[].gainOverTemperature"/>
                        <prop type="string" name="name" arg="$parameters.properties.links[].name" required="True"/>
                        <prop type="string" name="polarization" arg="$parameters.properties.links[].polarization" required="True">
                          <enum>
                            <item value="&quot;LHCP&quot;"/>
                            <item value="&quot;RHCP&quot;"/>
                            <item value="&quot;linearHorizontal&quot;"/>
                            <item value="&quot;linearVertical&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop type="float" name="minimumElevationDegrees" arg="$parameters.properties.minimumElevationDegrees"/>
                    <prop type="string" name="minimumViableContactDuration" arg="$parameters.properties.minimumViableContactDuration"/>
                    <prop type="object" name="networkConfiguration" arg="$parameters.properties.networkConfiguration" required="True">
                      <prop type="string" name="subnetId" arg="$parameters.properties.networkConfiguration.subnetId" required="True"/>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$parameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Orbital/contactProfiles/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="autoTrackingConfiguration">
                      <enum>
                        <item value="&quot;disabled&quot;"/>
                        <item value="&quot;sBand&quot;"/>
                        <item value="&quot;xBand&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="eventHubUri"/>
                    <prop type="array<object>" name="links" required="True">
                      <item type="object">
                        <prop type="array<object>" name="channels" required="True">
                          <item type="object">
                            <prop type="float" name="bandwidthMHz" required="True"/>
                            <prop type="float" name="centerFrequencyMHz" required="True"/>
                            <prop type="string" name="decodingConfiguration"/>
                            <prop type="string" name="demodulationConfiguration"/>
                            <prop type="string" name="encodingConfiguration"/>
                            <prop type="object" name="endPoint" required="True">
                              <prop type="string" name="endPointName" required="True"/>
                              <prop type="string" name="ipAddress" required="True"/>
                              <prop type="string" name="port" required="True"/>
                              <prop type="string" name="protocol" required="True">
                                <enum>
                                  <item value="&quot;TCP&quot;"/>
                                  <item value="&quot;UDP&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="string" name="modulationConfiguration"/>
                            <prop type="string" name="name" required="True"/>
                          </item>
                        </prop>
                        <prop type="string" name="direction" required="True">
                          <enum>
                            <item value="&quot;downlink&quot;"/>
                            <item value="&quot;uplink&quot;"/>
                          </enum>
                        </prop>
                        <prop type="float" name="eirpdBW"/>
                        <prop type="float" name="gainOverTemperature"/>
                        <prop type="string" name="name" required="True"/>
                        <prop type="string" name="polarization" required="True">
                          <enum>
                            <item value="&quot;LHCP&quot;"/>
                            <item value="&quot;RHCP&quot;"/>
                            <item value="&quot;linearHorizontal&quot;"/>
                            <item value="&quot;linearVertical&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop type="float" name="minimumElevationDegrees"/>
                    <prop type="string" name="minimumViableContactDuration"/>
                    <prop type="object" name="networkConfiguration" required="True">
                      <prop type="string" name="subnetId" required="True"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop readOnly="True" type="dateTime" name="createdAt"/>
                    <prop readOnly="True" type="string" name="createdBy"/>
                    <prop readOnly="True" type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="lastModifiedAt"/>
                    <prop readOnly="True" type="string" name="lastModifiedBy"/>
                    <prop readOnly="True" type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2022-03-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.orbital/contactprofiles/{}" version="2022-03-01" swagger="mgmt-plane/orbital/ResourceProviders/Microsoft.Orbital/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuT3JiaXRhbC9jb250YWN0UHJvZmlsZXMve2NvbnRhY3RQcm9maWxlTmFtZX0=/V/MjAyMi0wMy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.contactProfileName" options="contact-profile-name name n" required="True" idPart="name">
          <help short="Contact Profile name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Parameters">
        <arg type="ResourceLocation" var="$parameters.location" options="location l" group="Parameters">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg nullable="True" type="object" var="$parameters.tags" options="tags" group="Parameters">
          <help short="Resource tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="string" var="$parameters.properties.autoTrackingConfiguration" options="auto-tracking-configuration" group="Properties">
          <help short="Auto-tracking configuration."/>
          <enum>
            <item name="disabled" value="&quot;disabled&quot;"/>
            <item name="sBand" value="&quot;sBand&quot;"/>
            <item name="xBand" value="&quot;xBand&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.eventHubUri" options="event-hub-uri" group="Properties">
          <help short="ARM resource identifier of the Event Hub used for telemetry. Requires granting Orbital Resource Provider the rights to send telemetry into the hub."/>
        </arg>
        <arg type="array<object>" var="$parameters.properties.links" options="links" group="Properties">
          <help short="Links of the Contact Profile. Describes RF links, modem processing, and IP endpoints."/>
          <item nullable="True" type="object">
            <arg type="array<object>" var="$parameters.properties.links[].channels" options="channels">
              <help short="Contact Profile Link Channel."/>
              <item nullable="True" type="object">
                <arg type="float" var="$parameters.properties.links[].channels[].bandwidthMHz" options="bandwidth-m-hz">
                  <help short="Bandwidth in MHz."/>
                </arg>
                <arg type="float" var="$parameters.properties.links[].channels[].centerFrequencyMHz" options="center-frequency-m-hz">
                  <help short="Center Frequency in MHz."/>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.links[].channels[].decodingConfiguration" options="decoding-configuration">
                  <help short="Currently unused."/>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.links[].channels[].demodulationConfiguration" options="demodulation-configuration">
                  <help short="Copy of the modem configuration file such as Kratos QRadio or Kratos QuantumRx. Only valid for downlink directions. If provided, the modem connects to the customer endpoint and sends demodulated data instead of a VITA.49 stream."/>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.links[].channels[].encodingConfiguration" options="encoding-configuration">
                  <help short="Currently unused."/>
                </arg>
                <arg type="object" var="$parameters.properties.links[].channels[].endPoint" options="end-point">
                  <help short="Customer End point to store/retrieve data during a contact."/>
                  <arg type="string" var="$parameters.properties.links[].channels[].endPoint.endPointName" options="end-point-name">
                    <help short="Name of an end point."/>
                  </arg>
                  <arg type="string" var="$parameters.properties.links[].channels[].endPoint.ipAddress" options="ip-address">
                    <help short="IP Address."/>
                  </arg>
                  <arg type="string" var="$parameters.properties.links[].channels[].endPoint.port" options="port">
                    <help short="TCP port to listen on to receive data."/>
                  </arg>
                  <arg type="string" var="$parameters.properties.links[].channels[].endPoint.protocol" options="protocol">
                    <help short="Protocol either UDP or TCP."/>
                    <enum>
                      <item name="TCP" value="&quot;TCP&quot;"/>
                      <item name="UDP" value="&quot;UDP&quot;"/>
                    </enum>
                  </arg>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.links[].channels[].modulationConfiguration" options="modulation-configuration">
                  <help short="Copy of the modem configuration file such as Kratos QRadio. Only valid for uplink directions. If provided, the modem connects to the customer endpoint and accepts commands from the customer instead of a VITA.49 stream."/>
                </arg>
                <arg type="string" var="$parameters.properties.links[].channels[].name" options="name">
                  <help short="Channel name."/>
                </arg>
              </item>
            </arg>
            <arg type="string" var="$parameters.properties.links[].direction" options="direction">
              <help short="Direction (uplink or downlink)."/>
              <enum>
                <item name="downlink" value="&quot;downlink&quot;"/>
                <item name="uplink" value="&quot;uplink&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="float" var="$parameters.properties.links[].eirpdBW" options="eirpd-bw">
              <help short="Effective Isotropic Radiated Power (EIRP) in dBW. It is the required EIRP by the customer. Not used yet."/>
            </arg>
            <arg nullable="True" type="float" var="$parameters.properties.links[].gainOverTemperature" options="gain-over-temperature">
              <help short="Gain To Noise Temperature in db/K. It is the required G/T by the customer. Not used yet."/>
            </arg>
            <arg type="string" var="$parameters.properties.links[].name" options="name">
              <help short="Link name."/>
            </arg>
            <arg type="string" var="$parameters.properties.links[].polarization" options="polarization">
              <help short="Polarization. e.g. (RHCP, LHCP)."/>
              <enum>
                <item name="LHCP" value="&quot;LHCP&quot;"/>
                <item name="RHCP" value="&quot;RHCP&quot;"/>
                <item name="linearHorizontal" value="&quot;linearHorizontal&quot;"/>
                <item name="linearVertical" value="&quot;linearVertical&quot;"/>
              </enum>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="float" var="$parameters.properties.minimumElevationDegrees" options="minimum-elevation-degrees" group="Properties">
          <help short="Minimum viable elevation for the contact in decimal degrees. Used for listing the available contacts with a spacecraft at a given ground station."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.minimumViableContactDuration" options="minimum-viable-contact-duration" group="Properties">
          <help short="Minimum viable contact duration in ISO 8601 format. Used for listing the available contacts with a spacecraft at a given ground station."/>
        </arg>
        <arg type="object" var="$parameters.properties.networkConfiguration" options="network-configuration" group="Properties">
          <help short="Network configuration of customer virtual network."/>
          <arg type="string" var="$parameters.properties.networkConfiguration.subnetId" options="subnet-id">
            <help short="ARM resource identifier of the subnet delegated to the Microsoft.Orbital/orbitalGateways. Needs to be at least a class C subnet, and should not have any IP created in it."/>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="ContactProfiles_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Orbital/contactProfiles/{contactProfileName}">
          <request method="get">
            <path>
              <param type="string" name="contactProfileName" arg="$Path.contactProfileName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-03-01&quot;"/>
                <enum>
                  <item value="&quot;2020-09-01-preview&quot;"/>
                  <item value="&quot;2021-04-04-preview&quot;"/>
                  <item value="&quot;2022-03-01&quot;"/>
                </enum>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="ContactProfile_read">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Orbital/contactProfiles/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="autoTrackingConfiguration">
                      <enum>
                        <item value="&quot;disabled&quot;"/>
                        <item value="&quot;sBand&quot;"/>
                        <item value="&quot;xBand&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="eventHubUri"/>
                    <prop type="array<object>" name="links" required="True">
                      <item type="object">
                        <prop type="array<object>" name="channels" required="True">
                          <item type="object">
                            <prop type="float" name="bandwidthMHz" required="True"/>
                            <prop type="float" name="centerFrequencyMHz" required="True"/>
                            <prop type="string" name="decodingConfiguration"/>
                            <prop type="string" name="demodulationConfiguration"/>
                            <prop type="string" name="encodingConfiguration"/>
                            <prop type="object" name="endPoint" required="True">
                              <prop type="string" name="endPointName" required="True"/>
                              <prop type="string" name="ipAddress" required="True"/>
                              <prop type="string" name="port" required="True"/>
                              <prop type="string" name="protocol" required="True">
                                <enum>
                                  <item value="&quot;TCP&quot;"/>
                                  <item value="&quot;UDP&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="string" name="modulationConfiguration"/>
                            <prop type="string" name="name" required="True"/>
                          </item>
                        </prop>
                        <prop type="string" name="direction" required="True">
                          <enum>
                            <item value="&quot;downlink&quot;"/>
                            <item value="&quot;uplink&quot;"/>
                          </enum>
                        </prop>
                        <prop type="float" name="eirpdBW"/>
                        <prop type="float" name="gainOverTemperature"/>
                        <prop type="string" name="name" required="True"/>
                        <prop type="string" name="polarization" required="True">
                          <enum>
                            <item value="&quot;LHCP&quot;"/>
                            <item value="&quot;RHCP&quot;"/>
                            <item value="&quot;linearHorizontal&quot;"/>
                            <item value="&quot;linearVertical&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop type="float" name="minimumElevationDegrees"/>
                    <prop type="string" name="minimumViableContactDuration"/>
                    <prop type="object" name="networkConfiguration" required="True">
                      <prop type="string" name="subnetId" required="True"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop readOnly="True" type="dateTime" name="createdAt"/>
                    <prop readOnly="True" type="string" name="createdBy"/>
                    <prop readOnly="True" type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="lastModifiedAt"/>
                    <prop readOnly="True" type="string" name="lastModifiedBy"/>
                    <prop readOnly="True" type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate instance="$Instance">
          <json>
            <schema type="object" name="parameters" required="True" clientFlatten="True">
              <prop type="ResourceLocation" name="location" arg="$parameters.location" required="True"/>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="string" name="autoTrackingConfiguration" arg="$parameters.properties.autoTrackingConfiguration">
                  <enum>
                    <item value="&quot;disabled&quot;"/>
                    <item value="&quot;sBand&quot;"/>
                    <item value="&quot;xBand&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="eventHubUri" arg="$parameters.properties.eventHubUri"/>
                <prop type="array<object>" name="links" arg="$parameters.properties.links" required="True">
                  <item type="object">
                    <prop type="array<object>" name="channels" arg="$parameters.properties.links[].channels" required="True">
                      <item type="object">
                        <prop type="float" name="bandwidthMHz" arg="$parameters.properties.links[].channels[].bandwidthMHz" required="True"/>
                        <prop type="float" name="centerFrequencyMHz" arg="$parameters.properties.links[].channels[].centerFrequencyMHz" required="True"/>
                        <prop type="string" name="decodingConfiguration" arg="$parameters.properties.links[].channels[].decodingConfiguration"/>
                        <prop type="string" name="demodulationConfiguration" arg="$parameters.properties.links[].channels[].demodulationConfiguration"/>
                        <prop type="string" name="encodingConfiguration" arg="$parameters.properties.links[].channels[].encodingConfiguration"/>
                        <prop type="object" name="endPoint" arg="$parameters.properties.links[].channels[].endPoint" required="True">
                          <prop type="string" name="endPointName" arg="$parameters.properties.links[].channels[].endPoint.endPointName" required="True"/>
                          <prop type="string" name="ipAddress" arg="$parameters.properties.links[].channels[].endPoint.ipAddress" required="True"/>
                          <prop type="string" name="port" arg="$parameters.properties.links[].channels[].endPoint.port" required="True"/>
                          <prop type="string" name="protocol" arg="$parameters.properties.links[].channels[].endPoint.protocol" required="True">
                            <enum>
                              <item value="&quot;TCP&quot;"/>
                              <item value="&quot;UDP&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="string" name="modulationConfiguration" arg="$parameters.properties.links[].channels[].modulationConfiguration"/>
                        <prop type="string" name="name" arg="$parameters.properties.links[].channels[].name" required="True"/>
                      </item>
                    </prop>
                    <prop type="string" name="direction" arg="$parameters.properties.links[].direction" required="True">
                      <enum>
                        <item value="&quot;downlink&quot;"/>
                        <item value="&quot;uplink&quot;"/>
                      </enum>
                    </prop>
                    <prop type="float" name="eirpdBW" arg="$parameters.properties.links[].eirpdBW"/>
                    <prop type="float" name="gainOverTemperature" arg="$parameters.properties.links[].gainOverTemperature"/>
                    <prop type="string" name="name" arg="$parameters.properties.links[].name" required="True"/>
                    <prop type="string" name="polarization" arg="$parameters.properties.links[].polarization" required="True">
                      <enum>
                        <item value="&quot;LHCP&quot;"/>
                        <item value="&quot;RHCP&quot;"/>
                        <item value="&quot;linearHorizontal&quot;"/>
                        <item value="&quot;linearVertical&quot;"/>
                      </enum>
                    </prop>
                  </item>
                </prop>
                <prop type="float" name="minimumElevationDegrees" arg="$parameters.properties.minimumElevationDegrees"/>
                <prop type="string" name="minimumViableContactDuration" arg="$parameters.properties.minimumViableContactDuration"/>
                <prop type="object" name="networkConfiguration" arg="$parameters.properties.networkConfiguration" required="True">
                  <prop type="string" name="subnetId" arg="$parameters.properties.networkConfiguration.subnetId" required="True"/>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$parameters.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="ContactProfiles_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Orbital/contactProfiles/{contactProfileName}">
          <request method="put">
            <path>
              <param type="string" name="contactProfileName" arg="$Path.contactProfileName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-03-01&quot;"/>
                <enum>
                  <item value="&quot;2020-09-01-preview&quot;"/>
                  <item value="&quot;2021-04-04-preview&quot;"/>
                  <item value="&quot;2022-03-01&quot;"/>
                </enum>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@ContactProfile_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
